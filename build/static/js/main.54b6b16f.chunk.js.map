{"version":3,"sources":["components/NewPost/NewPostForm.js","components/NewPost/NewPost.js","components/Dashboard/DashboardHeader.js","components/Post/Post.js","components/Timeline/Timeline.js","components/Dashboard/Dashboard.js","components/Home/HomePage.js","components/Shared/Header/Header.js","components/Login/LoginForm.js","components/Shared/Popup/Popup.js","components/Login/LoginPage.js","components/Signup/SignupForm.js","components/Signup/SignupPage.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","maxHeight","margin","spacing","minWidth","maxWidth","minHeight","overflow","cursor","padding","height","width","border","borderRadius","color","fontSize","NewPostForm","props","classes","useState","EditorState","createEmpty","postText","setPostText","textInput","useEffect","focus","files","setFiles","imageUrls","setImageUrls","forEach","file","type","includes","updatedFiles","filter","f","name","filesUrls","map","URL","createObjectURL","displayImages","className","Button","variant","multiple","onChange","event","target","index","src","alt","Divider","editorState","handleKeyCommand","command","newState","RichUtils","ref","input","onClick","closeModal","post_data","text","getCurrentContent","getPlainText","submitPost","handleSubmit","modal","display","alignItems","justifyContent","paper","backgroundColor","textAlign","NewPost","history","useHistory","uploadProgress","setUploadProgress","a","formData","FormData","append","uuidv4","exec","url","process","REACT_APP_SERVER_HOST","headers","localStorage","getItem","config","onUploadProgress","progressEvent","loaded","total","axios","post","resp","console","log","data","onClose","go","push","Modal","open","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Typography","LinearProgress","value","title","flexGrow","btn","textTransform","DashboardHeader","modalOpen","setModalOpen","AppBar","position","Toolbar","card","marginTop","boxShadow","avatar","objectFit","Post","timestamp","deletePost","_id","delete","status","Card","CardHeader","Avatar","aria-label","user","toUpperCase","action","IconButton","subheader","Date","toLocaleString","CardMedia","animation","images","imageName","i","CardContent","component","CardActions","disableSpacing","posts","Timeline","setPosts","postsPending","setPostsPending","skip","setSkip","loadTimeline","queryParams","get","newPosts","length","concat","useBottomScrollListener","loadingSpinner","CircularProgress","Dashboard","exact","path","homepage","HomePage","Header","options","buttons","button","key","form","text_field","login_button","LoginForm","username","password","formState","setFormState","errorState","setErrorState","showPassword","togglePassword","handleInput","validate","test","email","Container","autoComplete","onSubmit","onLogin","preventDefault","Grid","container","TextField","label","onBlur","error","helperText","required","fullWidth","InputProps","endAdornment","Popup","setOpen","id","header","message","login_page","LoginPage","setModal","login","setItem","token","signup_form","signup_btn","toggle_pwd_btn","SignupForm","initialFormState","firstName","lastName","gender","dob","validateDate","isNaN","ageInYear","getFullYear","indexOf","onSignup","item","sm","xs","FormControl","InputLabel","Select","MenuItem","FormHelperText","utils","DateFnsUtils","format","date","KeyboardButtonProps","signup_page","SignupPage","signup","app","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mUAMMA,G,OAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFC,UAAW,mBACX,QAAS,CACLC,OAAQH,EAAMI,QAAQ,KAG9B,gBAAiB,CACbC,SAAU,QACVC,SAAU,QACVC,UAAW,QACXL,UAAW,mBACXM,SAAU,QAEd,mBAAoB,CAChBC,OAAQ,WAEZ,iBAAkB,CACdN,OAAQ,MACRO,QAAS,OAEb,aAAc,CACVC,OAAQ,OACRC,MAAO,OACPC,OAAQ,iBACRC,aAAc,OAElB,gBAAiB,CACbC,MAAO,MACPC,SAAU,cAyFHC,EArFK,SAACC,GAEjB,IAAMC,EAAUrB,IAFW,EAGKsB,mBAASC,cAAYC,eAH1B,mBAGpBC,EAHoB,KAGVC,EAHU,KAIvBC,EAAY,KAEhBC,qBAAU,WACND,EAAUE,WAPa,MAUDP,mBAAS,IAVR,mBAUpBQ,EAVoB,KAUbC,EAVa,OAWOT,mBAAS,IAXhB,mBAWpBU,EAXoB,KAWTC,EAXS,KA+B3BL,qBAAU,WARNE,EAAMI,SAAQ,SAAAC,GACV,IAAIA,EAAKC,KAAKC,SAAS,UAAU,CAC7B,IAAMC,EAAeR,EAAMS,QAAO,SAAAC,GAAC,OAAIA,EAAEC,OAAON,EAAKM,QACrDV,EAASO,OATC,WAClB,IAAMI,EAAYZ,EAAMa,KAAI,SAAAR,GAAI,OAAIS,IAAIC,gBAAgBV,MACxDF,EAAaS,GAcbI,KACF,CAAChB,IAoBH,OACI,sBAAKiB,UAAW1B,EAAQlB,KAAxB,UACI,8BACI,cAAC6C,EAAA,EAAD,CAAQC,QAAQ,OAAOhC,MAAM,UAAU8B,UAAW1B,EAAQ,oBAA1D,SACI,uBAAOe,KAAK,OAAOc,UAAU,EAAMC,SA7C9B,SAACC,GAClBrB,EAAS,YAAIqB,EAAMC,OAAOvB,SA4C6CiB,UAAW1B,EAAQ,0BAGtF,qBAAK0B,UAAW1B,EAAQ,kBAAxB,SAEQW,EACIA,EAAUW,KAAI,SAACR,EAAMmB,GACjB,OAAO,qBAAKC,IAAKpB,EAAkBqB,IAAKrB,EAAMY,UAAW1B,EAAQ,eAArCiC,MAEhC,OAGZ,cAACG,EAAA,EAAD,IACA,qBAAKV,UAAW1B,EAAQ,iBAAxB,SACI,cAAC,SAAD,CACIqC,YAAajC,EACbkC,iBAtCS,SAACC,EAASF,GAC/B,IAAMG,EAAWC,YAAUH,iBAAiBD,EAAaE,GACzD,OAAIC,GACAnC,EAAYmC,GACL,WAEJ,eAiCKV,SAAUzB,EACVqC,IAAK,SAACC,GAAYrC,EAAYqC,OAGtC,cAAChB,EAAA,EAAD,CAAQC,QAAQ,WAAWhC,MAAM,UAAUgD,QAAS7C,EAAM8C,WAA1D,qBACA,cAAClB,EAAA,EAAD,CAAQC,QAAQ,YAAYhC,MAAM,UAAUgD,QAAS,kBAlCxC,WACjB,IAAME,EAAY,CACdC,KAAM3C,EAAS4C,oBAAoBC,eACnCxC,MAAOA,GAEXV,EAAMmD,WAAWJ,GA6B8CK,IAA3D,sB,0BChHNxE,EAAYC,YAAW,CACzBwE,MAAO,CACHC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEpBC,MAAO,CACHC,gBAAiB,QACjBhE,MAAO,QACPP,SAAU,QACVwE,UAAW,SACXnE,QAAS,UA8DFoE,EA1DC,SAAC5D,GAEb,IAAMC,EAAUrB,IACViF,EAAUC,cAHO,EAIqB5D,mBAAS,GAJ9B,mBAIhB6D,EAJgB,KAIAC,EAJA,KAMjBb,EAAU,uCAAG,WAAOJ,GAAP,uBAAAkB,EAAA,sEAEPC,EAAW,IAAIC,SACnBpB,EAAUrC,MAAMI,SAAQ,SAAAC,GACpBmD,EAASE,OAAO,SAAUrD,EAAMsD,cAAS,IAAI,kBAAkBC,KAAKvD,EAAKM,MAAM,OAEnF6C,EAASE,OAAO,OAAQrB,EAAUC,MAC5BuB,EAPK,UAOIC,mIAAYC,sBAPhB,WAQLC,EAAU,CACZ,cAAgB,UAAhB,OAA2BC,aAAaC,QAAQ,WAE9CC,EAAS,CACXC,iBAAkB,SAAAC,GACdf,EAAkBe,EAAcC,OAASD,EAAcE,MAAQ,OAb5D,SAgBQC,IAAMC,KAAKZ,EAAKL,EAAS,CAACQ,WAAUG,GAhB5C,OAgBLO,EAhBK,OAiBXC,QAAQC,IAAIF,EAAKG,MACjBvF,EAAMwF,UACN3B,EAAQ4B,GAAG,GAnBA,kDAqBXJ,QAAQC,IAAR,MACAzB,EAAQ6B,KAAK,UAtBF,0DAAH,sDA0BhB,OACI,cAACC,EAAA,EAAD,CACIC,KAAM5F,EAAM4F,KACZJ,QAASxF,EAAMwF,QACfK,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACXC,QAAS,KAEbtE,UAAW1B,EAAQoD,MARvB,SAUI,cAAC6C,EAAA,EAAD,CAAMC,GAAInG,EAAM4F,KAAhB,SACI,sBAAKjE,UAAW1B,EAAQwD,MAAxB,UACI,cAAC2C,EAAA,EAAD,CAAYvE,QAAQ,KAApB,sBAGA,cAAC,EAAD,CAAaiB,WAAY9C,EAAMwF,QAASrC,WAAYA,IAElDY,EAAe,EAAI,cAACsC,EAAA,EAAD,CAAgBxE,QAAQ,cAAcyE,MAAOvC,IAAqB,aCpErGnF,EAAYC,YAAW,CACzB0H,MAAO,CACHC,SAAU,KAEdC,IAAK,CACD5G,MAAO,QACP6G,cAAe,UA2BRC,EAvBS,SAAC3G,GACrB,IAAMC,EAAUrB,IADe,EAEGsB,oBAAS,GAFZ,mBAExB0G,EAFwB,KAEbC,EAFa,KAK/B,OACI,qCACI,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,WACI,cAACZ,EAAA,EAAD,CAAYvE,QAAQ,KAAKF,UAAW1B,EAAQsG,MAA5C,uBAGA,cAAC3E,EAAA,EAAD,CAAQD,UAAW1B,EAAQwG,IAAK5D,QAAS,kBAAMgE,GAAa,IAA5D,2BAGR,cAAC,EAAD,CACIjB,KAAMgB,EACNpB,QAAS,kBAAIqB,GAAa,U,kKCtBpCjI,EAAYC,YAAW,CACzBoI,KAAM,CACFC,UAAW,OACX1H,QAAS,MACTI,aAAc,MACdD,OAAQ,iBACR+D,gBAAiB,QACjByD,UAAW,OACXxD,UAAW,WAEfyD,OAAQ,CACJ1D,gBAAiB,WAErB,aAAc,GAGd,aAAc,CACVhE,MAAO,OACP2H,UAAW,UACXhI,UAAW,QACXL,UAAW,WAwEJsI,EApEF,SAACtH,GACV,IAIuBuH,EAJjBtH,EAAUrB,IACRuG,EAASnF,EAATmF,KACFtB,EAAUC,cAMV0D,EAAU,uCAAG,gCAAAvD,EAAA,sEAELM,EAFK,UAEIC,mIAAYC,sBAFhB,kBAE+CU,EAAKsC,KACzD/C,EAAU,CACZ,cAAiB,UAAYC,aAAaC,QAAQ,UAJ3C,SAMQM,IAAMwC,OAAOnD,EAAK,CAAEG,YAN5B,OAOS,OADdU,EANK,QAOFuC,SACLtC,QAAQC,IAAIF,EAAKG,MACjB1B,EAAQ4B,GAAG,IATJ,gDAYXJ,QAAQC,IAAR,MAZW,yDAAH,qDAgBhB,OACI,eAACsC,EAAA,EAAD,CAAMjG,UAAW1B,EAAQgH,KAAzB,UACI,cAACY,EAAA,EAAD,CACIT,OAAQ,cAACU,EAAA,EAAD,CAAQC,aAAW,QAAQpG,UAAW1B,EAAO,OAA7C,SAA2DkF,EAAK6C,KAAK,GAAGC,gBAChFC,OACI,cAACC,EAAA,EAAD,CAAYJ,aAAW,WAAvB,SACI,cAAC,IAAD,MAGRxB,MAAOpB,EAAK6C,KACZI,WA9BWb,EA8BcpC,EAAKoC,UA7B/B,IAAIc,KAAKd,GAAWe,oBA+BvB,cAACC,EAAA,EAAD,CAAW5G,UAAW1B,EAAQ,cAA9B,SACI,cAAC,IAAD,CACIuI,UAAU,QADd,SAIQrD,EAAKsD,OAAOlH,KAAI,SAACmH,EAAWC,GACxB,OAAO,qBAAKxG,IAAKqC,mIAAYC,sBAAwB,iBAAmBiE,EAAmBtG,IAAKsG,EAAW/G,UAAW1B,EAAQ,eAAtC0I,UAKxG,cAACC,EAAA,EAAD,UACI,cAACxC,EAAA,EAAD,CAAYvE,QAAQ,QAAQhC,MAAM,gBAAgBgJ,UAAU,IAA5D,SACK1D,EAAKnC,SAGd,eAAC8F,EAAA,EAAD,CAAaC,gBAAc,EAA3B,UACI,cAACZ,EAAA,EAAD,CAAYJ,aAAW,mBAAvB,SACI,cAAC,IAAD,MAEJ,cAACI,EAAA,EAAD,CAAYJ,aAAW,QAAvB,SACI,cAAC,IAAD,MAEJ,cAACI,EAAA,EAAD,CAAYJ,aAAW,SAASlF,QAAS,kBAAI2E,KAA7C,SACI,cAAC,IAAD,a,UCvFd5I,GAAYC,YAAW,CACzBmK,MAAO,CACH/J,OAAQ,kBACRO,QAAS,MACTI,aAAc,MACdH,OAAQ,OAEZ,kBAAmB,CACfC,MAAO,OACP4D,QAAS,OACTE,eAAgB,YA+DTyF,GA3DE,SAACjJ,GACd,IAAMC,EAAUrB,KACViF,EAAUC,cAFQ,EAGE5D,mBAAS,IAHX,mBAGjB8I,EAHiB,KAGVE,EAHU,OAIgBhJ,oBAAS,GAJzB,mBAIjBiJ,EAJiB,KAIHC,EAJG,OAMAlJ,mBAAS,GANT,mBAMjBmJ,EANiB,KAMXC,EANW,KAQlBC,EAAY,uCAAG,oCAAAtF,EAAA,sEAEPM,EAFO,UAEEC,mIAAYC,sBAFd,UAGPC,EAAU,CACZ,cAAiB,UAAYC,aAAaC,QAAQ,UAEhD4E,EANO,wBAMwBH,GANxB,SAOMnE,IAAMuE,IAAIlF,EAAMiF,EAAa,CAAE9E,YAPrC,OAQO,OADdU,EAPO,QAQJuC,UACC+B,EAAWtE,EAAKG,MACVoE,OAAO,GACfT,EAASF,EAAMY,OAAOF,IACtBJ,EAAQD,EAAO,IAEfD,GAAgB,IAdX,kDAkBb/D,QAAQC,IAAR,MACAzB,EAAQ6B,KAAK,UAnBA,0DAAH,qDAyBlBlF,qBAAU,WACN+I,MACD,IAGHM,aAAwBN,GAGxB,IAAMO,EAAkBX,EAAiB,qBAAKxH,UAAW1B,EAAQ,mBAAxB,SACrC,cAAC8J,EAAA,EAAD,CAAkBlK,MAAM,gBAClB,KAEV,OACI,sBAAK8B,UAAW1B,EAAQ+I,MAAxB,UAEKA,EAAMzH,KAAI,SAAA4D,GACP,OAAO,cAAC,EAAD,CAAMA,KAAMA,GAAWA,EAAKsC,QAGtCqC,MCnEPlL,GAAYC,YAAW,CACzB,oBAAqB,CACjBa,MAAO,MACPN,SAAU,QACVH,OAAQ,UAsBD+K,GAjBG,SAAChK,GACf,IAAMC,EAAUrB,KAEhB,OACI,gCACI,cAAC,EAAD,IACA,qBAAK+C,UAAW1B,EAAQ,qBAAxB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOgK,OAAK,EAACC,KAAK,cAAcrB,UAAWI,KAC3C,cAAC,IAAD,CAAOgB,OAAK,EAACC,KAAK,sBAAsBrB,UAAWI,cCpBjErK,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCqL,SAAU,CACN3K,QAAS,OACTK,MAAO,QACP,QAAS,CACLZ,OAAQH,EAAMI,QAAQ,SA+BnBkL,GAxBE,SAACpK,GACd,IAAM6D,EAAUC,cACV7D,EAAUrB,KAEhB,OACI,sBAAK+C,UAAW1B,EAAQkK,SAAxB,UACI,sCACA,cAACvI,EAAA,EAAD,CAAQC,QAAQ,YAAYhC,MAAM,YAAYgD,QAAS,kBAAIgB,EAAQ6B,KAAK,WAAxE,mBAGA,cAAC9D,EAAA,EAAD,CAAQC,QAAQ,YAAYhC,MAAM,UAAUgD,QAAS,kBAAIgB,EAAQ6B,KAAK,eAAtE,uBAGA,cAAC9D,EAAA,EAAD,CAAQC,QAAQ,YAAYhC,MAAM,UAAUgD,QAAS,kBAAIgB,EAAQ6B,KAAK,WAAtE,mBAGA,cAAC9D,EAAA,EAAD,CAAQC,QAAQ,YAAYhC,MAAM,UAAUgD,QAAS,kBAAIgB,EAAQ6B,KAAK,YAAtE,yB,QC7BN9G,GAAYC,YAAW,CACzB0H,MAAO,CACHC,SAAU,KAEdC,IAAK,CACD5G,MAAO,QACP6G,cAAe,UAyBR2D,GArBA,SAACrK,GAAW,IAAD,EACEA,EAAMsK,QAAvB/D,EADe,EACfA,MAAMgE,EADS,EACTA,QACPtK,EAAUrB,KACViF,EAAUC,cAEhB,OACI,cAACgD,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,WACI,cAACZ,EAAA,EAAD,CAAYvE,QAAQ,KAAKF,UAAW1B,EAAQsG,MAA5C,SACKA,IAGDgE,EAAQhJ,KAAI,SAAAiJ,GACR,OAAO,eAAC5I,EAAA,EAAD,CAAQD,UAAW1B,EAAQwG,IAAK5D,QAAS,kBAAIgB,EAAQ6B,KAAK8E,EAAON,OAAjE,cAA4FM,EAAOnJ,KAAnG,MAA6EmJ,EAAOC,c,iFCpB7G7L,GAAYC,YAAW,CACzB6L,KAAM,CACFtL,SAAU,QACV8H,UAAW,MACX1H,QAAS,sBAEbmL,WAAY,CACR1L,OAAQ,qBAEZ2L,aAAc,CACV3L,OAAQ,oBACRO,QAAS,UA0HFqL,GAtHG,SAAC7K,GACf,IAAMC,EAAUrB,KADS,EAaQsB,mBAVR,CACrB4K,SAAU,GACVC,SAAU,KALW,mBAalBC,EAbkB,KAaRC,EAbQ,OAcW/K,mBANV,CACtB4K,SAAU,GACVC,SAAU,KAVW,mBAclBG,EAdkB,KAcNC,EAdM,OAeajL,oBAAS,GAftB,mBAelBkL,EAfkB,KAeLC,EAfK,KAiBnBC,EAAc,SAACtJ,GACjBiJ,EAAa,6BACND,GADK,mBAEPhJ,EAAMC,OAAOZ,KAAOW,EAAMC,OAAOqE,UAUpCiF,EAAW,SAACvJ,GACd,OAAOA,EAAMC,OAAOZ,MAChB,IAAK,QACI,uEAAuEmK,KAAKR,EAAUS,OAMvFN,EAAc,6BACPD,GADM,IAETO,MAAO,MAPXN,EAAc,6BACPD,GADM,IAETO,MAAO,2BAQf,MAEJ,IAAK,WACET,EAAUD,SAASpB,OAAO,EACzBwB,EAAc,6BACPD,GADM,IAETH,SAAU,mBAGdI,EAAc,6BACPD,GADM,IAETH,SAAU,QAO9B,OACI,cAACW,GAAA,EAAD,CAAW/J,UAAW1B,EAAQyK,KAA9B,SACI,uBAAMiB,aAAa,MAAMC,SAxCZ,SAAC5J,GAClBhC,EAAM6L,QAAQb,GACdhJ,EAAM8J,kBAsCF,UACI,cAACC,GAAA,EAAD,CAAMC,WAAS,EAAf,SACI,cAACC,GAAA,EAAD,CACIC,MAAM,WACN7K,KAAK,WACLiF,MAAO0E,EAAUF,SACjB/I,SAAUuJ,EACVa,OAAQZ,EACRa,MAA6B,KAAtBlB,EAAWJ,SAClBuB,WAAkC,KAAtBnB,EAAWJ,SAAgBI,EAAWJ,SAAW,KAC7DwB,UAAQ,EACRC,WAAS,EACT5K,UAAW1B,EAAQ0K,eAG3B,cAACoB,GAAA,EAAD,CAAMC,WAAS,EAAf,SACI,cAACC,GAAA,EAAD,CACIjL,KAAMoK,EAAc,OAAO,WAC3Bc,MAAM,WACN7K,KAAK,WACLiF,MAAO0E,EAAUD,SACjBhJ,SAAUuJ,EACVa,OAAQZ,EACRa,MAA6B,KAAtBlB,EAAWH,SAClBsB,WAAkC,KAAtBnB,EAAWH,SAAgBG,EAAWH,SAAW,KAC7DuB,UAAQ,EACRC,WAAS,EACT5K,UAAW1B,EAAQ0K,WACnB6B,WAAY,CACRC,aACI,cAACtE,EAAA,EAAD,CAAYJ,aAAW,WAAWlF,QAAS,kBAAIwI,GAAgBD,IAA/D,SACMA,EAAe,cAAC,KAAD,IAAqB,cAAC,KAAD,WAM1D,cAACW,GAAA,EAAD,CAAMC,WAAS,EAAf,SACI,cAACpK,EAAA,EAAD,CACIZ,KAAK,SACLa,QAAQ,YACRhC,MAAM,UACN0M,WAAS,EACT5K,UAAW1B,EAAQ2K,aALvB,2BCxHdhM,GAAYC,YAAW,CACzBwE,MAAO,CACHC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBC,MAAO,CACLC,gBAAiB,QACjBvE,SAAU,QACVwE,UAAW,SACXnE,QAAS,UA4CFkN,GAvCD,SAAC1M,GACX,IAAMC,EAAUrB,KADK,EAEGsB,mBAASF,EAAM4F,MAFlB,mBAEdA,EAFc,KAER+G,EAFQ,KAiBrB,OAJAnM,qBAAU,WARNmM,EAAQ3M,EAAM4F,QAUhB,CAAC5F,EAAM4F,OAGL,cAACD,EAAA,EAAD,CACIC,KAAMA,EACNJ,QAZY,WAChBmH,GAAQ,GACR3M,EAAMwF,SAAQ,IAWVK,sBAAoB,EACpBC,kBAAmBC,IACnBC,cAAe,CACXC,QAAS,KAEbtE,UAAW1B,EAAQoD,MARvB,SAUI,cAAC6C,EAAA,EAAD,CAAMC,GAAIP,EAAV,SACI,sBAAKjE,UAAW1B,EAAQwD,MAAxB,UACI,oBAAImJ,GAAG,yBAAP,SAAiC5M,EAAM6M,SACvC,mBAAGD,GAAG,+BAAN,SAAsC5M,EAAM8M,kBCzC1DlO,GAAYC,YAAW,CACzBkO,WAAY,CACRtN,OAAQ,OACRC,MAAO,UAgEAsN,GA1DG,SAAChN,GACf,IAAMC,EAAUrB,KACViF,EAAUC,cAFS,EAeC5D,mBAAS,CAC/B0F,MAAM,EACNiH,OAAQ,GACRC,QAAS,KAlBY,mBAelBzJ,EAfkB,KAeX4J,EAfW,KAqBnBC,EAAK,uCAAG,WAAOhJ,GAAP,iBAAAD,EAAA,6DACJM,EADI,UACKC,mIAAYC,sBADjB,4BAGaS,IAAMC,KAAKZ,EAAKL,GAH7B,OAIc,OADdkB,EAHA,QAIGuC,SACLhD,aAAawI,QAAQ,QAAS/H,EAAKG,KAAK6H,OACxCH,EAAS,CACLrH,MAAM,EACNiH,OAAQzH,EAAKuC,OACbmF,QAAS1H,EAAKG,KAAKuH,UAEvBjJ,EAAQ6B,KAAK,eAXX,gDAcNuH,EAAS,CACLrH,MAAM,EACNiH,OAAQ,KAAIxL,KACZyL,QAAS,KAAIA,UAjBX,yDAAH,sDAuBX,OACI,sBAAKnL,UAAW1B,EAAQ8M,WAAxB,UACI,cAAC,GAAD,CAAQzC,QA1CK,CACjB/D,MAAO,WACPgE,QAAS,CACL,CACIE,IAAK,UACLpJ,KAAM,UACN6I,KAAM,eAsCV,cAAC,GAAD,CAAW2B,QAASqB,IACpB,cAAC,GAAD,cACI1H,QAAS,kBAAIyH,EAAS,CAACrH,MAAK,EAAOiH,OAAQ,GAAIC,QAAS,OACpDzJ,Q,+EC7DdzE,GAAYC,YAAW,CACzBwO,YAAa,CACTnG,UAAW,MACX9H,SAAU,QACVM,MAAO,MACPF,QAAS,sBAEb8N,WAAY,CACRrO,OAAQ,mBACRO,QAAS,QAEb+N,eAAgB,CACZ/N,QAAS,sBA+RFgO,GAxRI,SAACxN,GAChB,IAAMC,EAAUrB,KADU,EAEYsB,oBAAS,GAFrB,mBAEnBkL,EAFmB,KAENC,EAFM,KAIpBoC,EAAmB,CACrBC,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,IAAK,IAAIxF,KAAK,IAAK,EAAE,GACrBoD,MAAO,GACPV,SAAU,IAVY,EAaQ7K,mBAASuN,GAbjB,mBAanBzC,EAbmB,KAaRC,EAbQ,OAwBU/K,mBATV,CACtBwN,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRC,IAAK,GACLpC,MAAO,GACPV,SAAU,KArBY,mBAwBnBG,EAxBmB,KAwBPC,EAxBO,KA0BpBG,EAAc,SAACtJ,GACjBiJ,EAAa,6BACND,GADK,mBAEPhJ,EAAMC,OAAOZ,KAAOW,EAAMC,OAAOqE,UAgB1C9F,qBAAU,WACNsN,MACF,CAAC9C,EAAU6C,MAEb,IAAMC,EAAe,WACjB,GAAG9C,EAAU6C,eAAexF,OAAS0F,MAAM/C,EAAU6C,KAAK,CACtD,IAAIG,GAAa,IAAI3F,MAAQ4F,cAAcjD,EAAU6C,IAAII,cAErD9C,EADD6C,EAAU,GACK,6BACP9C,GADM,IAET2C,IAAK,yBAGK,6BACP3C,GADM,IAET2C,IAAK,WAIb1C,EAAc,6BACPD,GADM,IAET2C,IAAK,mBAKXtC,EAAW,SAACvJ,GACd,OAAOA,EAAMC,OAAOZ,MAChB,IAAK,YACI,mBAAmBmK,KAAKR,EAAU0C,WAMnCvC,EAAc,6BACPD,GADM,IAETwC,UAAW,MAPfvC,EAAc,6BACPD,GADM,IAETwC,UAAW,wBAQnB,MAEJ,IAAK,WACI,mBAAmBlC,KAAKR,EAAU2C,UAMnCxC,EAAc,6BACPD,GADM,IAETyC,SAAU,MAPdxC,EAAc,6BACPD,GADM,IAETyC,SAAU,uBAQlB,MAEJ,IAAK,UAC4D,IAA1D,CAAC,OAAO,SAAS,YAAYO,QAAQlD,EAAU4C,QAC9CzC,EAAc,6BACPD,GADM,IAET0C,OAAQ,oBAGZzC,EAAc,6BACPD,GADM,IAET0C,OAAQ,MAGhB,MAEJ,IAAK,QACI,uEAAuEpC,KAAKR,EAAUS,OAMvFN,EAAc,6BACPD,GADM,IAETO,MAAO,MAPXN,EAAc,6BACPD,GADM,IAETO,MAAO,2BAQf,MAEJ,IAAK,WACET,EAAUD,SAASpB,OAAO,EACzBwB,EAAc,6BACPD,GADM,IAETH,SAAU,mBAGdI,EAAc,6BACPD,GADM,IAETH,SAAU,QAO9B,OACQ,cAACW,GAAA,EAAD,CAAW/J,UAAW1B,EAAQoN,YAA9B,SACI,uBAAMzB,SA3GG,SAAC5J,GAClBhC,EAAMmO,SAASnD,GACfhJ,EAAM8J,kBAyGE,UACI,eAACC,GAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,GAAA,EAAD,CAAMqC,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACI,cAACrC,GAAA,EAAD,CACI5K,KAAK,YACL6K,MAAM,aACNjN,OAAO,SACPsN,WAAS,EACTjG,MAAO0E,EAAU0C,UACjB3L,SAAUuJ,EACVa,OAAQZ,EACRa,MAA8B,KAAvBlB,EAAWwC,UAClBrB,WAAmC,KAAvBnB,EAAWwC,UAAiBxC,EAAWwC,UAAY,KAC/DpB,UAAQ,MAGhB,cAACP,GAAA,EAAD,CAAMqC,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACI,cAACrC,GAAA,EAAD,CACI5K,KAAK,WACL6K,MAAM,YACNjN,OAAO,SACPsN,WAAS,EACTjG,MAAO0E,EAAU2C,SACjB5L,SAAUuJ,EACVa,OAAQZ,EACRa,MAA6B,KAAtBlB,EAAWyC,SAClBtB,WAAkC,KAAtBnB,EAAWyC,SAAgBzC,EAAWyC,SAAW,KAC7DrB,UAAQ,SAKpB,eAACP,GAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,GAAA,EAAD,CAAMqC,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACI,eAACC,GAAA,EAAD,CAAatP,OAAO,SAASsN,WAAS,EAACH,MAA2B,KAApBlB,EAAW0C,OAAzD,UACI,cAACY,GAAA,EAAD,qBACA,eAACC,GAAA,EAAD,CACIpN,KAAK,SACLiF,MAAO0E,EAAU4C,OACjB7L,SAAUuJ,EACVa,OAAQZ,EACRa,MAA2B,KAApBlB,EAAW0C,OAClBtB,UAAQ,EANZ,UAQI,cAACoC,GAAA,EAAD,CAAUpI,MAAO,OAAjB,kBACA,cAACoI,GAAA,EAAD,CAAUpI,MAAO,SAAjB,oBACA,cAACoI,GAAA,EAAD,CAAUpI,MAAO,WAAjB,yBAEJ,cAACqI,GAAA,EAAD,UAAqC,KAApBzD,EAAW0C,OAAc1C,EAAW0C,OAAS,YAGtE,cAAC7B,GAAA,EAAD,CAAMqC,MAAI,EAACC,GAAI,EAAGC,IAAI,IACtB,cAACvC,GAAA,EAAD,CAAMqC,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACI,cAAC,KAAD,CAAyBM,MAAOC,KAAhC,SACI,cAAC,KAAD,CACIxN,KAAK,MAGLpC,OAAO,SACP6P,OAAO,aACP5C,MAAM,gBACNK,WAAS,EACTjG,MAAO0E,EAAU6C,IACjB9L,SAjLb,SAACgN,GAChB9D,EAAa,6BACND,GADK,IAER6C,IAAKkB,MA+KmB3C,MAAwB,KAAjBlB,EAAW2C,IAClBxB,WAA6B,KAAjBnB,EAAW2C,IAAW3C,EAAW2C,IAAM,KACnDvB,UAAQ,EACR0C,oBAAqB,CACjB,aAAc,wBAOlC,cAACjD,GAAA,EAAD,CAAMC,WAAS,EAAf,SACI,cAACD,GAAA,EAAD,CAAMqC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACI,cAACrC,GAAA,EAAD,CACI5K,KAAK,QACL6K,MAAM,QACNjN,OAAO,SACPsN,WAAS,EACTjG,MAAO0E,EAAUS,MACjB1J,SAAUuJ,EACVa,OAAQZ,EACRa,MAA0B,KAAnBlB,EAAWO,MAClBY,WAA+B,KAAnBnB,EAAWO,MAAaP,EAAWO,MAAQ,KACvDa,UAAQ,QAKpB,cAACP,GAAA,EAAD,CAAMC,WAAS,EAAf,SACI,cAACD,GAAA,EAAD,CAAMqC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,SACI,cAACrC,GAAA,EAAD,CACI5K,KAAK,WACLL,KAAMoK,EAAc,OAAO,WAC3Bc,MAAM,WACNjN,OAAO,SACPsN,WAAS,EACTjG,MAAO0E,EAAUD,SACjBhJ,SAAUuJ,EACVa,OAAQZ,EACRa,MAA6B,KAAtBlB,EAAWH,SAClBsB,WAAkC,KAAtBnB,EAAWH,SAAgBG,EAAWH,SAAW,KAC7DuB,UAAQ,EACRE,WAAY,CACRC,aACI,cAACtE,EAAA,EAAD,CAAYJ,aAAW,WAAWlF,QAAS,kBAAIwI,GAAgBD,IAAezJ,UAAW1B,EAAQsN,eAAjG,SACMnC,EAAe,cAAC,KAAD,IAAqB,cAAC,KAAD,aAU9D,eAACW,GAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,GAAA,EAAD,CAAMqC,MAAI,EAACC,GAAI,EAAGC,IAAI,IACtB,cAACvC,GAAA,EAAD,CAAMqC,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAtB,SACI,cAAC1M,EAAA,EAAD,CAAQZ,KAAK,SAASa,QAAQ,YAAYhC,MAAM,UAAU0M,WAAS,EAAC5K,UAAW1B,EAAQqN,WAAvF,uBAEJ,cAACvB,GAAA,EAAD,CAAMqC,MAAI,EAACC,GAAI,EAAGC,IAAI,aClSxC1P,GAAYC,YAAW,CACzBoQ,YAAa,CACTxP,OAAQ,OACRC,MAAO,UA8DAwP,GAvDI,SAAClP,GAChB,IAAMC,EAAUrB,KADU,EAcAsB,mBAAS,CAC/B0F,MAAM,EACNiH,OAAQ,GACRC,QAAS,KAjBa,mBAcnBzJ,EAdmB,KAcZ4J,EAdY,KAoBpBkC,EAAM,uCAAG,WAAMjL,GAAN,iBAAAD,EAAA,6DACLM,EADK,UACIC,mIAAYC,sBADhB,6BAGYS,IAAMC,KAAKZ,EAAIL,GAH3B,OAIa,OADdkB,EAHC,QAIEuC,SACLhD,aAAawI,QAAQ,QAAS/H,EAAKG,KAAK6H,OACxCH,EAAS,CACLrH,MAAM,EACNiH,OAAQzH,EAAKuC,OACbmF,QAAS1H,EAAKG,KAAKuH,WATpB,gDAaPG,EAAS,CACLrH,MAAM,EACNiH,OAAQ,KAAIxL,KACZyL,QAAS,KAAIA,UAhBV,yDAAH,sDAqBZ,OACI,sBAAKnL,UAAW1B,EAAQgP,YAAxB,UACI,cAAC,GAAD,CAAQ3E,QAxCK,CACjB/D,MAAO,WACPgE,QAAS,CACL,CACIE,IAAK,UACLpJ,KAAM,QACN6I,KAAM,cAoCV,cAAC,GAAD,CAAYiE,SAAUgB,IACtB,cAAC,GAAD,cACI3J,QAAS,kBAAIyH,EAAS,CAACrH,MAAK,EAAOiH,OAAQ,GAAIC,QAAS,OACpDzJ,QCzDdzE,GAAYC,YAAW,CACzBuQ,IAAK,CACD3P,OAAQ,OACRC,MAAO,UAqBA2P,OAff,WACI,IAAMpP,EAAUrB,KAEhB,OACI,qBAAK+C,UAAW1B,EAAQmP,IAAxB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOnF,OAAK,EAACC,KAAK,IAAIrB,UAAWuB,KACjC,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASrB,UAAWmE,KACtC,cAAC,IAAD,CAAO/C,OAAK,EAACC,KAAK,UAAUrB,UAAWqG,KACvC,cAAC,IAAD,CAAOjF,OAAK,EAACC,KAAK,aAAarB,UAAWmB,WCd3CsF,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACL,cAAC,GAAD,IACFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.54b6b16f.chunk.js","sourcesContent":["import { Button, Divider, makeStyles } from '@material-ui/core';\nimport { Editor, EditorState, RichUtils } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nimport { useEffect, useState } from 'react';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        maxHeight: \"500px !important\",\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    \"editor-window\": {\n        minWidth: \"300px\",\n        maxWidth: \"700px\",\n        minHeight: \"100px\",\n        maxHeight: \"300px !important\",\n        overflow: \"auto\"\n    },\n    \"choose-files-btn\": {\n        cursor: \"pointer\",\n    },\n    \"upload-img-div\": {\n        margin: \"0px\",\n        padding: \"0px\",\n    },\n    \"upload-img\": {\n        height: \"70px\",\n        width: \"70px\",\n        border: \"2px solid #ddd\",\n        borderRadius: \"2px\",\n    },\n    \"error-message\": {\n        color: \"red\",\n        fontSize: \"small\"\n    }\n}))\n\nconst NewPostForm = (props) => {\n\n    const classes = useStyles();\n    const [postText, setPostText] = useState(EditorState.createEmpty());\n    let textInput = null;\n\n    useEffect(() => {\n        textInput.focus();\n    })\n\n    const [files, setFiles] = useState([]);\n    const [imageUrls, setImageUrls] = useState([]);\n\n    const handleChange = (event) => {\n        setFiles([...event.target.files]);\n    }\n\n    const displayImages = () => {\n        const filesUrls = files.map(file => URL.createObjectURL(file));\n        setImageUrls(filesUrls);\n    }\n\n    const removeInvalidFiles = () => {\n        files.forEach(file => {\n            if(!file.type.includes(\"image/\")){\n                const updatedFiles = files.filter(f => f.name!==file.name);\n                setFiles(updatedFiles);\n            }\n        })\n    }\n\n    useEffect(()=>{\n        removeInvalidFiles();\n        displayImages();\n    },[files]);\n\n    const handleKeyCommand = (command, editorState) => {\n        const newState = RichUtils.handleKeyCommand(editorState, command);\n        if (newState) {\n            setPostText(newState);\n            return 'handled';\n        }\n        return 'not-handled';\n    }\n\n\n    const handleSubmit = () => {\n        const post_data = {\n            text: postText.getCurrentContent().getPlainText(),\n            files: files\n        }\n        props.submitPost(post_data);\n    }  \n\n    return (\n        <div className={classes.root}>\n            <div>\n                <Button variant=\"text\" color=\"primary\" className={classes[\"choose-files-btn\"]}>\n                    <input type=\"file\" multiple={true} onChange={handleChange} className={classes[\"choose-files-btn\"]} />\n                </Button>\n            </div>\n            <div className={classes[\"upload-img-div\"]}>\n                {\n                    imageUrls ? (\n                        imageUrls.map((file, index) => {\n                            return <img src={file} key={index} alt={file} className={classes[\"upload-img\"]} />\n                        })\n                    ) : null\n                }\n            </div>\n            <Divider />\n            <div className={classes[\"editor-window\"]}>\n                <Editor\n                    editorState={postText}\n                    handleKeyCommand={handleKeyCommand}\n                    onChange={setPostText}\n                    ref={(input) => { textInput = input; }}\n                />\n            </div>\n            <Button variant=\"outlined\" color=\"default\" onClick={props.closeModal}> Cancel</Button>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => handleSubmit()} >Post</Button>\n        </div>\n    )\n}\n\nexport default NewPostForm;","import { Backdrop, Fade, LinearProgress, makeStyles, Modal, Typography } from \"@material-ui/core\";\nimport NewPostForm from \"./NewPostForm\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { useState } from \"react\";\n\nconst useStyles = makeStyles({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    paper: {\n        backgroundColor: 'white',\n        width: \"600px\",\n        minWidth: '200px',\n        textAlign: 'center',\n        padding: '20px'\n    },\n})\n\nconst NewPost = (props) => {\n\n    const classes = useStyles();\n    const history = useHistory();\n    const [uploadProgress, setUploadProgress] = useState(0);\n\n    const submitPost = async (post_data) => {\n        try {\n            let formData = new FormData();\n            post_data.files.forEach(file => {\n                formData.append(\"images\", file, uuidv4()+\".\"+/(?:\\.([^.]+))?$/.exec(file.name)[1]);\n            })\n            formData.append(\"text\", post_data.text);\n            const url = `${process.env.REACT_APP_SERVER_HOST}/posts/`;\n            const headers = {\n                \"Authorization\": `Bearer ${localStorage.getItem(\"token\")}`\n            }\n            const config = {\n                onUploadProgress: progressEvent => {\n                    setUploadProgress(progressEvent.loaded / progressEvent.total * 100);\n                }\n            }\n            const resp = await axios.post(url, formData,{headers}, config);\n            console.log(resp.data);\n            props.onClose();\n            history.go(0);\n        } catch (err) {\n            console.log(err);\n            history.push(\"/login\");\n        }\n    }\n\n    return (\n        <Modal\n            open={props.open}\n            onClose={props.onClose}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n                timeout: 500,\n            }}\n            className={classes.modal}\n        >\n            <Fade in={props.open}>\n                <div className={classes.paper}>\n                    <Typography variant=\"h6\">\n                        New Post\n                    </Typography>\n                    <NewPostForm closeModal={props.onClose} submitPost={submitPost} />\n                    \n                    { uploadProgress>0 ? <LinearProgress variant=\"determinate\" value={uploadProgress} /> : null}\n                </div>\n            </Fade>\n\n        </Modal>\n    )\n}\n\nexport default NewPost;","import { AppBar, Toolbar, Button, Typography, makeStyles } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport NewPost from \"../NewPost/NewPost\";\n\nconst useStyles = makeStyles({\n    title: {\n        flexGrow: \"1\",\n    },\n    btn: {\n        color: \"white\",\n        textTransform: \"none\",\n    }\n})\n\nconst DashboardHeader = (props) => {\n    const classes = useStyles();\n    const [modalOpen, setModalOpen] = useState(false)\n\n\n    return (\n        <>\n            <AppBar position=\"sticky\">\n                <Toolbar >\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Dashboard\n                </Typography>\n                    <Button className={classes.btn} onClick={() => setModalOpen(true)}>  +Post </Button>\n                </Toolbar>\n            </AppBar>\n            <NewPost \n                open={modalOpen}\n                onClose={()=>setModalOpen(false)}\n            />\n        </>\n    )\n}\n\nexport default DashboardHeader;","import { Avatar, Card, CardActions, CardContent, CardHeader, CardMedia, IconButton, makeStyles, Typography } from \"@material-ui/core\";\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Carousel from \"react-material-ui-carousel\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    card: {\n        marginTop: \"80px\",\n        padding: \"0px\",\n        borderRadius: \"2px\",\n        border: \"2px solid grey\",\n        backgroundColor: \"white\",\n        boxShadow: \"none\",\n        textAlign: \"justify\",\n    },\n    avatar: {\n        backgroundColor: \"#008080\"\n    },\n    \"post-media\": {\n\n    },\n    \"post-image\": {\n        width: \"100%\",\n        objectFit: \"contain\",\n        minHeight: \"200px\",\n        maxHeight: \"400px\"\n    }\n})\n\nconst Post = (props) => {\n    const classes = useStyles();\n    const { post } = props;\n    const history = useHistory();\n\n    const convertToDate = (timestamp) => {\n        return new Date(timestamp).toLocaleString();\n    }\n\n    const deletePost = async() => {\n        try {\n            const url = `${process.env.REACT_APP_SERVER_HOST}/posts/${post._id}`;\n            const headers = {\n                \"authorization\": \"Bearer \" + localStorage.getItem(\"token\")\n            }\n            const resp = await axios.delete(url, { headers });\n            if (resp.status === 200) {\n                console.log(resp.data);\n                history.go(0);\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    }\n\n    return (\n        <Card className={classes.card}>\n            <CardHeader\n                avatar={<Avatar aria-label=\"post1\" className={classes[\"avatar\"]} >{post.user[0].toUpperCase()}</Avatar>}\n                action={\n                    <IconButton aria-label=\"settings\">\n                        <MoreVertIcon />\n                    </IconButton>\n                }\n                title={post.user}\n                subheader={convertToDate(post.timestamp)}\n            />\n            <CardMedia className={classes[\"post-media\"]}>\n                <Carousel\n                    animation=\"slide\"\n                >\n                    {\n                        post.images.map((imageName, i) => {\n                            return <img src={process.env.REACT_APP_SERVER_HOST + \"/posts/images/\" + imageName} key={i} alt={imageName} className={classes[\"post-image\"]} />\n                        })\n                    }\n                </Carousel>\n            </CardMedia>\n            <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {post.text}\n                </Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n                <IconButton aria-label=\"add to favorites\">\n                    <FavoriteIcon />\n                </IconButton>\n                <IconButton aria-label=\"share\">\n                    <ShareIcon />\n                </IconButton>\n                <IconButton aria-label=\"delete\" onClick={()=>deletePost()} >\n                    <DeleteIcon />\n                </IconButton>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default Post;","import { Button, CircularProgress, makeStyles } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport Post from \"../Post/Post\";\nimport axios from \"axios\";\nimport { useHistory } from \"react-router-dom\";\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener';\n\nconst useStyles = makeStyles({\n    posts: {\n        margin: \"4px 6px 4px 6px\",\n        padding: \"0px\",\n        borderRadius: \"0px\",\n        height: \"98%\",\n    },\n    \"loading-spinner\": {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\"\n    }\n})\n\nconst Timeline = (props) => {\n    const classes = useStyles();\n    const history = useHistory();\n    const [posts, setPosts] = useState([]);\n    const [postsPending, setPostsPending] = useState(true);\n    // limit, skip for pagination\n    const [skip, setSkip] = useState(0);\n\n    const loadTimeline = async () => {\n        try {\n            const url = `${process.env.REACT_APP_SERVER_HOST}/posts`;\n            const headers = {\n                \"authorization\": \"Bearer \" + localStorage.getItem(\"token\")\n            }\n            const queryParams = `?limit=5&skip=${skip}`;\n            const resp = await axios.get(url + queryParams, { headers });\n            if (resp.status === 200) {\n                const newPosts = resp.data;\n                if(newPosts.length>0){\n                    setPosts(posts.concat(newPosts));\n                    setSkip(skip + 5);\n                }else{\n                    setPostsPending(false);\n                }\n            }\n        } catch (err) {\n            console.log(err);\n            history.push(\"/login\");\n        }\n    }\n\n\n\n    useEffect(() => {\n        loadTimeline();\n    }, []);\n\n\n    useBottomScrollListener(loadTimeline);\n\n\n    const loadingSpinner = (postsPending) ? (<div className={classes[\"loading-spinner\"]}>\n        <CircularProgress color=\"secondary\" />\n    </div>) : null;\n\n    return (\n        <div className={classes.posts}>\n            \n            {posts.map(post => {\n                return <Post post={post} key={post._id} />\n            })}\n\n            {loadingSpinner}\n\n        </div>\n    )\n}\n\n\nexport default Timeline;","import {  makeStyles } from \"@material-ui/core\";\nimport DashboardHeader from \"./DashboardHeader\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Timeline from \"../Timeline/Timeline\";\n\n\nconst useStyles = makeStyles({\n    \"dashboard-content\": {\n        width: \"90%\",\n        maxWidth: '800px',\n        margin: \"auto\",\n    }\n})\n\n\nconst Dashboard = (props) =>  {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <DashboardHeader />\n            <div className={classes[\"dashboard-content\"]}>\n                <BrowserRouter>\n                    <Route exact path=\"/dashboard/\" component={Timeline} />\n                    <Route exact path=\"/dashboard/timeline\" component={Timeline} />\n                </BrowserRouter>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Dashboard;","import { Button, makeStyles } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst useStyles = makeStyles(theme => ({\n    homepage: {\n        padding: \"16px\",\n        color: \"white\",\n        '& > *': {\n            margin: theme.spacing(1),\n          },\n    },\n    \n}))\n\n\nconst HomePage = (props) =>  {\n    const history = useHistory();\n    const classes = useStyles();\n\n    return (\n        <div className={classes.homepage}>\n            <h2>Home</h2>\n            <Button variant=\"contained\" color=\"secondary\" onClick={()=>history.push(\"/login\")}>\n                Login\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" onClick={()=>history.push(\"/dashboard\")}>\n                Dashboard\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" onClick={()=>history.push(\"/posts\")}>\n                Posts\n            </Button>\n            <Button variant=\"contained\" color=\"primary\" onClick={()=>history.push(\"/signup\")}>\n                Sign-up\n            </Button>\n        </div>\n    )\n}\n\n\nexport default HomePage;","import { AppBar, Toolbar, Button, Typography, makeStyles } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    title: {\n        flexGrow: \"1\",\n    },\n    btn: {\n        color: \"white\",\n        textTransform: \"none\",\n    }\n})\n\nconst Header = (props) => {\n    const {title,buttons} = props.options;\n    const classes = useStyles();\n    const history = useHistory();\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar >\n                <Typography variant=\"h6\" className={classes.title}>\n                    {title}\n                </Typography>\n                {\n                    buttons.map(button => {\n                        return <Button className={classes.btn} onClick={()=>history.push(button.path)} key={button.key} > {button.name} </Button>\n                    })\n                }\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Header;","import { Button, Grid, Container, IconButton, makeStyles, TextField } from \"@material-ui/core\";\nimport { useState } from \"react\";\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\n\nconst useStyles = makeStyles({\n    form: {\n        maxWidth: \"400px\",\n        marginTop: \"15%\",\n        padding: \"6px 24px 24px 24px\",\n    },\n    text_field: {\n        margin: \"18px 0px 12px 0px\",\n    },\n    login_button: {\n        margin: \"32px 0px 24px 0px\",\n        padding: \"12px\",\n    }\n})\n\nconst LoginForm = (props) => {\n    const classes = useStyles();\n\n    const initialFormState = {\n        username: \"\",\n        password: \"\"\n    }\n\n    const initialErrorState = {\n        username: \"\",\n        password: \"\"\n    }\n\n    const [formState,setFormState] = useState(initialFormState);\n    const [errorState, setErrorState] = useState(initialErrorState);\n    const [showPassword,togglePassword] = useState(false);\n\n    const handleInput = (event) => {\n        setFormState({\n            ...formState,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    const handleSubmit = (event) => {\n        props.onLogin(formState);\n        event.preventDefault();\n    }\n\n\n    const validate = (event) => {\n        switch(event.target.name){\n            case \"email\":\n                if(! /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(formState.email)){\n                    setErrorState({\n                        ...errorState,\n                        email: \"Invalid Email Address\"\n                    })\n                }else{\n                    setErrorState({\n                        ...errorState,\n                        email: \"\"\n                    })\n                }\n                break;\n            \n            case \"password\":\n                if(formState.password.length<6){\n                    setErrorState({\n                        ...errorState,\n                        password: \"Weak password\"\n                    })\n                }else{\n                    setErrorState({\n                        ...errorState,\n                        password: \"\"\n                    })\n                }\n                break;\n        }\n    }\n\n    return(\n        <Container className={classes.form}>\n            <form autoComplete=\"off\" onSubmit={handleSubmit}>\n                <Grid container>\n                    <TextField \n                        label=\"Username\"\n                        name=\"username\"\n                        value={formState.username}\n                        onChange={handleInput}\n                        onBlur={validate}\n                        error={errorState.username!==\"\"}\n                        helperText={errorState.username!==\"\" ? errorState.username : null}\n                        required\n                        fullWidth\n                        className={classes.text_field}\n                    />\n                </Grid>\n                <Grid container>\n                    <TextField \n                        type={showPassword? \"text\":\"password\"}\n                        label=\"Password\"\n                        name=\"password\"\n                        value={formState.password}\n                        onChange={handleInput}\n                        onBlur={validate}\n                        error={errorState.password!==\"\"}\n                        helperText={errorState.password!==\"\" ? errorState.password : null}\n                        required\n                        fullWidth\n                        className={classes.text_field}\n                        InputProps={{\n                            endAdornment: (\n                                <IconButton aria-label=\"settings\" onClick={()=>togglePassword(!showPassword)} >\n                                    { showPassword ? <VisibilityIcon /> : <VisibilityOffIcon /> }\n                                </IconButton>\n                            )\n                        }}\n                    />\n                </Grid>\n                <Grid container>\n                    <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        fullWidth\n                        className={classes.login_button}\n                    >\n                        Login\n                    </Button>\n                </Grid>\n            </form>\n        </Container>\n    )\n\n}\n\nexport default LoginForm;","import { Backdrop, Fade, makeStyles, Modal } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\n\nconst useStyles = makeStyles({\n    modal: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      },\n      paper: {\n        backgroundColor: 'white',\n        minWidth: '200px',\n        textAlign: 'center',\n        padding: '20px'\n        \n      },\n})\n\nconst Popup = (props) => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(props.open);\n\n    const handleOpen = () => {\n        setOpen(props.open);\n    }\n\n    const handleClose = () => {\n        setOpen(false);\n        props.onClose(false);\n    };\n\n    useEffect(()=>{\n        handleOpen();\n    },[props.open]);\n\n    return (\n        <Modal\n            open={open}\n            onClose={handleClose}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n                timeout: 500,\n            }}\n            className={classes.modal}\n        >\n            <Fade in={open}>\n                <div className={classes.paper}>\n                    <h2 id=\"transition-modal-title\">{props.header}</h2>\n                    <p id=\"transition-modal-description\">{props.message}</p>\n                </div>\n            </Fade>\n\n        </Modal>\n    )\n}\n\nexport default Popup;","import { makeStyles } from \"@material-ui/core\";\nimport Header from \"../Shared/Header/Header\";\nimport LoginForm from \"./LoginForm\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport Popup from \"../Shared/Popup/Popup\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    login_page: {\n        height: \"100%\",\n        width: \"100%\",\n    },\n\n})\n\n\nconst LoginPage = (props) => {\n    const classes = useStyles();\n    const history = useHistory();\n    \n    const header_optns = {\n        title: \"ChitChat\",\n        buttons: [\n            {\n                key: \"button1\",\n                name: \"Sign-up\",\n                path: \"/signup\"\n            }\n        ]\n    }\n\n    const [modal, setModal] = useState({\n        open: false,\n        header: '',\n        message: ''\n    });\n\n    const login = async (formData) => {\n        const url = `${process.env.REACT_APP_SERVER_HOST}/login`;\n        try {\n            const resp = await axios.post(url, formData);\n            if (resp.status === 200) {\n                localStorage.setItem(\"token\", resp.data.token);\n                setModal({\n                    open: true,\n                    header: resp.status,\n                    message: resp.data.message\n                })\n                history.push(\"/dashboard\");\n            }\n        } catch (err) {\n            setModal({\n                open: true,\n                header: err.name,\n                message: err.message\n            })\n        }\n    }\n\n\n    return (\n        <div className={classes.login_page}>\n            <Header options={header_optns} />\n\n            <LoginForm onLogin={login} />\n            <Popup \n                onClose={()=>setModal({open:false, header: '', message: ''})}\n                {...modal}\n            />\n        </div>\n    )\n}\n\n\nexport default LoginPage;","import { Button, Container, FormControl, FormHelperText, Grid, IconButton, InputLabel, makeStyles, MenuItem, Select, TextField } from \"@material-ui/core\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\nimport { useEffect, useState } from \"react\";\n\nconst useStyles = makeStyles({\n    signup_form: {\n        marginTop: \"10%\",\n        maxWidth: \"500px\",\n        width: \"90%\",\n        padding: \"6px 24px 24px 24px\",\n    },\n    signup_btn: {\n        margin: \"48px 0px 0px 0px\",\n        padding: \"12px\",\n    },\n    toggle_pwd_btn: {\n        padding: \"0px 14px 6px 6px\",\n    }\n})\n\n\n\n\nconst SignupForm = (props) => {\n    const classes = useStyles();\n    const [showPassword,togglePassword] = useState(false);\n\n    const initialFormState = {\n        firstName: \"\",\n        lastName: \"\",\n        gender: \"\",\n        dob: new Date(2000,0,1),\n        email: \"\",\n        password: \"\"\n    }\n\n    const [formState, setFormState] = useState(initialFormState);\n\n    const initialErrorState = {\n        firstName: \"\",\n        lastName: \"\",\n        gender: \"\",\n        dob: \"\",\n        email: \"\",\n        password: \"\"\n    }\n\n    const [errorState, setErrorState] = useState(initialErrorState);\n\n    const handleInput = (event) => {\n        setFormState({\n            ...formState,\n            [event.target.name]: event.target.value\n        })\n    }\n\n    const handleDate = (date) => {\n        setFormState({\n            ...formState,\n            dob: date\n        })\n    }\n\n    const handleSubmit = (event) => {\n        props.onSignup(formState);\n        event.preventDefault();\n    }\n\n    useEffect(()=>{\n        validateDate();\n    },[formState.dob]);\n\n    const validateDate = () => {\n        if(formState.dob instanceof Date && !isNaN(formState.dob)){\n            let ageInYear = (new Date()).getFullYear()-formState.dob.getFullYear();\n            if(ageInYear<10){\n                setErrorState({\n                    ...errorState,\n                    dob: \"Too young to be here\"\n                })\n            }else{\n                setErrorState({\n                    ...errorState,\n                    dob: \"\"\n                })\n            }\n        }else{\n            setErrorState({\n                ...errorState,\n                dob: \"Invalid Date\"\n            })\n        }    \n    }\n\n    const validate = (event) => {\n        switch(event.target.name){\n            case \"firstName\":\n                if(! /^[a-zA-Z]{1,30}$/.test(formState.firstName)){\n                    setErrorState({\n                        ...errorState,\n                        firstName: \"Invalid First Name\"\n                    })\n                }else{\n                    setErrorState({\n                        ...errorState,\n                        firstName: \"\"\n                    })\n                }\n                break;\n\n            case \"lastName\":\n                if(! /^[a-zA-Z]{1,30}$/.test(formState.lastName)){\n                    setErrorState({\n                        ...errorState,\n                        lastName: \"Invalid Last Name\"\n                    })\n                }else{\n                    setErrorState({\n                        ...errorState,\n                        lastName: \"\"\n                    })\n                }\n                break;\n\n            case \"gender\":\n                if([\"Male\",\"Female\",\"Not Sure\"].indexOf(formState.gender)===-1){\n                    setErrorState({\n                        ...errorState,\n                        gender: \"Invalid gender\"\n                    })\n                }else{\n                    setErrorState({\n                        ...errorState,\n                        gender: \"\"\n                    })\n                }\n                break;\n\n            case \"email\":\n                if(! /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(formState.email)){\n                    setErrorState({\n                        ...errorState,\n                        email: \"Invalid Email Address\"\n                    })\n                }else{\n                    setErrorState({\n                        ...errorState,\n                        email: \"\"\n                    })\n                }\n                break;\n            \n            case \"password\":\n                if(formState.password.length<6){\n                    setErrorState({\n                        ...errorState,\n                        password: \"Weak password\"\n                    })\n                }else{\n                    setErrorState({\n                        ...errorState,\n                        password: \"\"\n                    })\n                }\n                break;\n        }\n    }\n\n    return (\n            <Container className={classes.signup_form}>\n                <form onSubmit={handleSubmit}>\n                    <Grid container>\n                        <Grid item sm={6} xs={12}>\n                            <TextField\n                                name=\"firstName\"\n                                label=\"First Name\"\n                                margin=\"normal\"\n                                fullWidth\n                                value={formState.firstName}\n                                onChange={handleInput}\n                                onBlur={validate}\n                                error={errorState.firstName!==\"\"}\n                                helperText={errorState.firstName!==\"\" ? errorState.firstName : null}\n                                required\n                            />\n                        </Grid>\n                        <Grid item sm={6} xs={12}>\n                            <TextField\n                                name=\"lastName\"\n                                label=\"Last Name\"\n                                margin=\"normal\"\n                                fullWidth\n                                value={formState.lastName}\n                                onChange={handleInput}\n                                onBlur={validate}\n                                error={errorState.lastName!==\"\"}\n                                helperText={errorState.lastName!==\"\" ? errorState.lastName : null}\n                                required\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <Grid container>\n                        <Grid item sm={5} xs={12}>\n                            <FormControl margin=\"normal\" fullWidth error={errorState.gender!==\"\"}>\n                                <InputLabel>Gender</InputLabel>\n                                <Select\n                                    name=\"gender\"\n                                    value={formState.gender}\n                                    onChange={handleInput}\n                                    onBlur={validate}\n                                    error={errorState.gender!==\"\"}\n                                    required\n                                >\n                                    <MenuItem value={\"Male\"}>Male</MenuItem>\n                                    <MenuItem value={\"Female\"}>Female</MenuItem>\n                                    <MenuItem value={\"Not Sure\"}>Not Sure</MenuItem>\n                                </Select>\n                                <FormHelperText>{errorState.gender!==\"\" ? errorState.gender : null}</FormHelperText>\n                            </FormControl>\n                        </Grid>\n                        <Grid item sm={1} xs={false}></Grid>\n                        <Grid item sm={6} xs={12}>\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                                <KeyboardDatePicker\n                                    name=\"dob\"\n                                    //disableToolbar\n                                    //variant=\"inline\"\n                                    margin=\"normal\"\n                                    format=\"MM/dd/yyyy\"\n                                    label=\"Date Of Birth\"\n                                    fullWidth\n                                    value={formState.dob}\n                                    onChange={handleDate}\n                                    error={errorState.dob!==\"\"}\n                                    helperText={errorState.dob!==\"\" ? errorState.dob : null}\n                                    required\n                                    KeyboardButtonProps={{\n                                        'aria-label': 'change date',\n                                    }}\n                                />\n                            </MuiPickersUtilsProvider>\n                        </Grid>\n                    </Grid>\n\n                    <Grid container>\n                        <Grid item sm={12} xs={12}>\n                            <TextField\n                                name=\"email\"\n                                label=\"Email\"\n                                margin=\"normal\"\n                                fullWidth\n                                value={formState.email}\n                                onChange={handleInput}\n                                onBlur={validate}\n                                error={errorState.email!==\"\"}\n                                helperText={errorState.email!==\"\" ? errorState.email : null}\n                                required\n                            />\n                        </Grid>\n                    </Grid>\n\n                    <Grid container>\n                        <Grid item sm={12} xs={12}>\n                            <TextField\n                                name=\"password\"\n                                type={showPassword? \"text\":\"password\"}\n                                label=\"Password\"\n                                margin=\"normal\"\n                                fullWidth\n                                value={formState.password}\n                                onChange={handleInput}\n                                onBlur={validate}\n                                error={errorState.password!==\"\"}\n                                helperText={errorState.password!==\"\" ? errorState.password : null}\n                                required\n                                InputProps={{\n                                    endAdornment: (\n                                        <IconButton aria-label=\"settings\" onClick={()=>togglePassword(!showPassword)} className={classes.toggle_pwd_btn}>\n                                            { showPassword ? <VisibilityIcon /> : <VisibilityOffIcon /> }\n                                        </IconButton>\n                                    )\n                                }}\n                            />\n\n                        </Grid>\n                    </Grid>\n\n\n                    <Grid container>\n                        <Grid item sm={3} xs={false}></Grid>\n                        <Grid item sm={6} xs={12}>\n                            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth className={classes.signup_btn}>Sign up</Button>\n                        </Grid>\n                        <Grid item sm={3} xs={false}></Grid>\n                    </Grid>\n                </form>\n\n            </Container>\n    )\n}\n\n\nexport default SignupForm;","import { makeStyles } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport Header from \"../Shared/Header/Header\";\nimport Popup from \"../Shared/Popup/Popup\";\nimport SignupForm from \"./SignupForm\";\n\nconst useStyles = makeStyles({\n    signup_page: {\n        height: \"100%\",\n        width: \"100%\",\n    }\n})\n\n\n\n\nconst SignupPage = (props) => {\n    const classes = useStyles();\n\n    const header_optns = {\n        title: \"ChitChat\",\n        buttons: [\n            {\n                key: \"button1\",\n                name: \"Login\",\n                path: \"/login\"\n            }\n        ]\n    }\n\n    const [modal, setModal] = useState({\n        open: false,\n        header: '',\n        message: ''\n    });\n\n    const signup = async(formData) => {\n        const url = `${process.env.REACT_APP_SERVER_HOST}/signup`;\n        try{\n            const resp = await axios.post(url,formData);\n            if (resp.status === 201) {\n                localStorage.setItem(\"token\", resp.data.token);\n                setModal({\n                    open: true,\n                    header: resp.status,\n                    message: resp.data.message\n                })\n            }\n        }catch(err) {\n            setModal({\n                open: true,\n                header: err.name,\n                message: err.message\n            })\n        }\n    }\n\n    return (\n        <div className={classes.signup_page}>\n            <Header options={header_optns} />\n\n            <SignupForm onSignup={signup} />\n            <Popup \n                onClose={()=>setModal({open:false, header: '', message: ''})}\n                {...modal}\n            />\n        </div>\n    )\n}\n\n\nexport default SignupPage;","import { makeStyles } from \"@material-ui/core\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport HomePage from \"./components/Home/HomePage\";\nimport LoginPage from \"./components/Login/LoginPage\";\nimport SignupPage from \"./components/Signup/SignupPage\";\n\n\nconst useStyles = makeStyles({\n    app: {\n        height: \"100%\",\n        width: \"100%\",\n        //overflowX: \"hidden\",\n    },\n    \n})\n\nfunction App() {\n    const classes = useStyles();\n    \n    return (\n        <div className={classes.app}>\n            <BrowserRouter>\n                <Route exact path=\"/\" component={HomePage} />\n                <Route exact path=\"/login\" component={LoginPage} />\n                <Route exact path=\"/signup\" component={SignupPage} />\n                <Route exact path=\"/dashboard\" component={Dashboard} />\n            </BrowserRouter>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"./index.css\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}